@using System.Web.Compilation
@using DynamicControls
@model dynamic

@functions {

    private DynamicDataSource DataSourceDelegate(string name, Dictionary<string, string> additionalParameters)
    {
        DynamicDataSource result = new DynamicDataSource();
        if (name.Equals("select-field"))
        {
            result.Add("0", "Day");
            result.Add("1", "Week");
            result.Add("2", "Month");
            result.Add("3", "Year");
            result.Add(additionalParameters.First().Key, additionalParameters.First().Value);
        }
        else if (name.Equals("radio-list"))
        {
            result.Add("0", "New");
            result.Add("1", "Old");
        }
        return result;
    }

    private Type GetTypeDelegate(string type)
    {
        return BuildManager.GetType(String.Format("DynamicControls.Site.Dynamic.{0}Control", type), true);
    }
}

@{
    ViewBag.Title = "Dynamic Controls";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section style
{
    @Styles.Render("~/Content/kendo")
}

<h2>Dynamic Controls</h2>

@(Html.DynamicControls(File.ReadAllText(@"controls.json")).RegisterDataSourceDelegate(DataSourceDelegate, "dataSource").RegisterGetTypeDelegate(GetTypeDelegate))

<button onclick="getDynamicData();">Get data</button>

@section script
{
    @Scripts.Render("~/bundles/dynamic")
    @Scripts.Render("~/bundles/dynamic-bootstrap")
    @Scripts.Render("~/bundles/kendo")
    @Scripts.Render("~/bundles/dynamic-kendo")

    <script type="text/javascript">
        function getDynamicData() {
            var data = getAreaData("arm-demand");
            alert(JSON.stringify(data));
        }
    </script>
}
